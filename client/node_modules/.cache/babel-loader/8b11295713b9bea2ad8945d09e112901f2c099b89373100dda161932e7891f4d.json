{"ast":null,"code":"import { API_BASE_URL } from \"../constants/constants\";\n\n// Function to get budget from the backend. Method: GET\nexport const fetchBudget = async () => {\n  const response = await fetch(`${API_BASE_URL}/budget`);\n  if (!response.ok) {\n    throw new Error('Failed to fetch budget');\n  }\n\n  // Parsing the response to get the data\n  let fetchedBudget = response.json().then(jsonResponse => {\n    console.log(\"data in fetchBudget\", jsonResponse);\n    return jsonResponse.data;\n  });\n  console.log(\"response in fetchBudget\", fetchedBudget);\n  return fetchedBudget;\n};","map":{"version":3,"names":["API_BASE_URL","fetchBudget","response","fetch","ok","Error","fetchedBudget","json","then","jsonResponse","console","log","data"],"sources":["C:/Users/maynh/OneDrive/Documents/GitHub/fa24-cse110-lab4-starter-code/client/src/utils/budget-utils.ts"],"sourcesContent":["import { API_BASE_URL } from \"../constants/constants\";\r\n\r\n// Function to get budget from the backend. Method: GET\r\nexport const fetchBudget = async (): Promise<number> => {\r\n    const response = await fetch(`${API_BASE_URL}/budget`);\r\n\tif (!response.ok) {\r\n    \tthrow new Error('Failed to fetch budget');\r\n\t}\r\n\r\n\t// Parsing the response to get the data\r\n\tlet fetchedBudget = response.json().then((jsonResponse) => {\r\n    \tconsole.log(\"data in fetchBudget\", jsonResponse);\r\n    \treturn jsonResponse.data;\r\n\t});\r\n\r\n\tconsole.log(\"response in fetchBudget\", fetchedBudget);\r\n\treturn fetchedBudget;\r\n}; \r\n\r\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,wBAAwB;;AAErD;AACA,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAA,KAA6B;EACpD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,YAAY,SAAS,CAAC;EACzD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EAC7C;;EAEA;EACA,IAAIC,aAAa,GAAGJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAACC,IAAI,CAAEC,YAAY,IAAK;IACvDC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEF,YAAY,CAAC;IAChD,OAAOA,YAAY,CAACG,IAAI;EAC5B,CAAC,CAAC;EAEFF,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEL,aAAa,CAAC;EACrD,OAAOA,aAAa;AACrB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}